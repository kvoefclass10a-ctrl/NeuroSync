rules_version = '2';
service cloud.firestore {
match /databases/{database}/documents {
  function isString(v) { return v is string; }  // helper [keep simple]
function len(v, min, max) { return isString(v) && v.size() >= min && v.size() <= max; }
function hasExactKeys(m, keys) { return m.keys().hasOnly(keys); }

match /chatbotmessages/{doc} {
  allow read: if true;  // public read [intended]
  allow create: if
    hasExactKeys(request.resource.data, ['Name','Email Id','Comment','Time']) &&  // no extra fields
    len(request.resource.data.Name, 0, 40) &&                                      // allow empty -> "Anonymous"
    len(request.resource.data['Email Id'], 0, 200) &&                              // optional email
    len(request.resource.data.Comment, 1, 500) &&                                  // required comment
    request.resource.data.Time == request.time;                                    // enforce server timestamp
  allow update, delete: if false;  // no edits/deletes
}

match /comments/{doc} {
  allow read: if true;  // public read
  allow create: if
    hasExactKeys(request.resource.data, ['name','text','timestamp']) &&  // exact fields
    len(request.resource.data.name, 0, 50) &&                             // allow empty name (will be set to 'Anonymous' in code)
    len(request.resource.data.text, 1, 500) &&                           // required text
    request.resource.data.timestamp is timestamp;                        // enforce timestamp type
  allow update, delete: if false;  // no edits/deletes
}

match /{document=**} {
  allow read, write: if false;  // deny everything else
}
}
}
